name: Prod Release

on:
  push:
    tags:
      - "prod-[0-9]+"

permissions:
  id-token: write
  contents: write

env:
  STAGE: prod
  BRANCH: main
  AMPLIFY_APP_ID: ${{ secrets.PROD_AMPLIFY_APP_ID }}
  DEPLOY_WEBHOOK_URL: ${{ secrets.PROD_DEPLOY_WEBHOOK_URL }}

jobs:
  deploy:
    name: Deploy to AWS Amplify
    runs-on: ubuntu-latest
    env:
      GH_NPM_TOKEN: ${{ secrets.GH_NPM_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        name: Checkout
        with:
          fetch-depth: 10

      - name: Load Environment Variables
        uses: ./.github/actions/setvars
        with:
          stage: ${{ env.STAGE }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/github-actions-deploy
          aws-region: ${{ env.AWS_REGION }}
          mask-aws-account-id: no

      - name: Dispatch Deployment
        id: dispatcher
        run: |
          LAST_JOB_ID=$(aws amplify list-jobs --app-id ${{ env.AMPLIFY_APP_ID }} --branch-name ${{ env.BRANCH }} | jq -r '.jobSummaries[0].jobId')

          curl -X POST -d {} "${{ env.DEPLOY_WEBHOOK_URL }}" -H "Content-Type:application/json" -s

          ELAPSED=0
          CURRENT_JOB_ID=""

          while [[ ("$CURRENT_JOB_ID" == "" || "$LAST_JOB_ID" == "$CURRENT_JOB_ID") && "$ELAPSED" -lt 600 ]]; do
            sleep 10
            ELAPSED=$((ELAPSED+10))
            CURRENT_JOB_ID=$(aws amplify list-jobs --app-id ${{ env.AMPLIFY_APP_ID }} --branch-name ${{ env.BRANCH }} | jq -r '.jobSummaries[0].jobId')
          done

          echo "amplify_job_id=$CURRENT_JOB_ID" >> $GITHUB_OUTPUT

      - name: Wait for Amplify to finish remote build
        run: |
          JOB_ID=${{ steps.dispatcher.outputs.amplify_job_id }}

          echo "JOB_ID=$JOB_ID"

          # Run initial command to get the status
          STATUS="INIT"

          # Keep querying until status is RUNNING, PENDING, SUCCEED, or timeout after 10 minutes
          ELAPSED=0

          while [[ ("$STATUS" == "INIT" || "$STATUS" == "RUNNING" || "$STATUS" == "PENDING") && "$ELAPSED" -lt 600 ]]; do
            sleep 10

            ELAPSED=$((ELAPSED+10))
            OUTPUT=$(aws amplify get-job --app-id ${{ env.AMPLIFY_APP_ID }} --branch-name ${{ env.BRANCH }} --job-id $JOB_ID | jq '.job')
            STATUS=$(echo $OUTPUT | jq -r '.summary.status')

            echo "Status: $STATUS"
          done

          # Check final status and exit with appropriate code
          if [[ "$STATUS" == "SUCCEED" ]]; then
            echo "Status: SUCCEED"
            exit 0
          elif [[ "$STATUS" == "FAILED" ]]; then
            echo "Status: FAILED"
            exit 1
          else
            echo "Status: TIMEOUT"
            exit 1
          fi
